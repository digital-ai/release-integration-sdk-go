/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package release

import (
	"encoding/json"
)

// ValueProviderConfiguration struct for ValueProviderConfiguration
type ValueProviderConfiguration struct {
	Variable *Variable `json:"variable,omitempty"`
}

// NewValueProviderConfiguration instantiates a new ValueProviderConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueProviderConfiguration() *ValueProviderConfiguration {
	this := ValueProviderConfiguration{}
	return &this
}

// NewValueProviderConfigurationWithDefaults instantiates a new ValueProviderConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueProviderConfigurationWithDefaults() *ValueProviderConfiguration {
	this := ValueProviderConfiguration{}
	return &this
}

// GetVariable returns the Variable field value if set, zero value otherwise.
func (o *ValueProviderConfiguration) GetVariable() Variable {
	if o == nil || isNil(o.Variable) {
		var ret Variable
		return ret
	}
	return *o.Variable
}

// GetVariableOk returns a tuple with the Variable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValueProviderConfiguration) GetVariableOk() (*Variable, bool) {
	if o == nil || isNil(o.Variable) {
    return nil, false
	}
	return o.Variable, true
}

// HasVariable returns a boolean if a field has been set.
func (o *ValueProviderConfiguration) HasVariable() bool {
	if o != nil && !isNil(o.Variable) {
		return true
	}

	return false
}

// SetVariable gets a reference to the given Variable and assigns it to the Variable field.
func (o *ValueProviderConfiguration) SetVariable(v Variable) {
	o.Variable = &v
}

func (o ValueProviderConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Variable) {
		toSerialize["variable"] = o.Variable
	}
	return json.Marshal(toSerialize)
}

type NullableValueProviderConfiguration struct {
	value *ValueProviderConfiguration
	isSet bool
}

func (v NullableValueProviderConfiguration) Get() *ValueProviderConfiguration {
	return v.value
}

func (v *NullableValueProviderConfiguration) Set(val *ValueProviderConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableValueProviderConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableValueProviderConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueProviderConfiguration(val *ValueProviderConfiguration) *NullableValueProviderConfiguration {
	return &NullableValueProviderConfiguration{value: val, isSet: true}
}

func (v NullableValueProviderConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueProviderConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


