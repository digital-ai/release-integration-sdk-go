/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeliveryTimeline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryTimeline{}

// DeliveryTimeline struct for DeliveryTimeline
type DeliveryTimeline struct {
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	Releases []ReleaseTimeline `json:"releases,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
}

// NewDeliveryTimeline instantiates a new DeliveryTimeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryTimeline() *DeliveryTimeline {
	this := DeliveryTimeline{}
	return &this
}

// NewDeliveryTimelineWithDefaults instantiates a new DeliveryTimeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryTimelineWithDefaults() *DeliveryTimeline {
	this := DeliveryTimeline{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeliveryTimeline) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeline) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeliveryTimeline) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeliveryTimeline) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DeliveryTimeline) GetTitle() string {
	if o == nil || isNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeline) GetTitleOk() (*string, bool) {
	if o == nil || isNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DeliveryTimeline) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DeliveryTimeline) SetTitle(v string) {
	o.Title = &v
}

// GetReleases returns the Releases field value if set, zero value otherwise.
func (o *DeliveryTimeline) GetReleases() []ReleaseTimeline {
	if o == nil || isNil(o.Releases) {
		var ret []ReleaseTimeline
		return ret
	}
	return o.Releases
}

// GetReleasesOk returns a tuple with the Releases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeline) GetReleasesOk() ([]ReleaseTimeline, bool) {
	if o == nil || isNil(o.Releases) {
		return nil, false
	}
	return o.Releases, true
}

// HasReleases returns a boolean if a field has been set.
func (o *DeliveryTimeline) HasReleases() bool {
	if o != nil && !isNil(o.Releases) {
		return true
	}

	return false
}

// SetReleases gets a reference to the given []ReleaseTimeline and assigns it to the Releases field.
func (o *DeliveryTimeline) SetReleases(v []ReleaseTimeline) {
	o.Releases = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *DeliveryTimeline) GetStartDate() string {
	if o == nil || isNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeline) GetStartDateOk() (*string, bool) {
	if o == nil || isNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *DeliveryTimeline) HasStartDate() bool {
	if o != nil && !isNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *DeliveryTimeline) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DeliveryTimeline) GetEndDate() string {
	if o == nil || isNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeline) GetEndDateOk() (*string, bool) {
	if o == nil || isNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DeliveryTimeline) HasEndDate() bool {
	if o != nil && !isNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DeliveryTimeline) SetEndDate(v string) {
	o.EndDate = &v
}

func (o DeliveryTimeline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryTimeline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Releases) {
		toSerialize["releases"] = o.Releases
	}
	if !isNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !isNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableDeliveryTimeline struct {
	value *DeliveryTimeline
	isSet bool
}

func (v NullableDeliveryTimeline) Get() *DeliveryTimeline {
	return v.value
}

func (v *NullableDeliveryTimeline) Set(val *DeliveryTimeline) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryTimeline) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryTimeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryTimeline(val *DeliveryTimeline) *NullableDeliveryTimeline {
	return &NullableDeliveryTimeline{value: val, isSet: true}
}

func (v NullableDeliveryTimeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryTimeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


