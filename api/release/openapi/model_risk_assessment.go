/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RiskAssessment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskAssessment{}

// RiskAssessment struct for RiskAssessment
type RiskAssessment struct {
	Id             *string      `json:"id,omitempty"`
	Type           *string      `json:"type,omitempty"`
	VariableUsages []UsagePoint `json:"variableUsages,omitempty"`
	RiskAssessorId *string      `json:"riskAssessorId,omitempty"`
	Risk           *Risk        `json:"risk,omitempty"`
	Score          *int32       `json:"score,omitempty"`
	Headline       *string      `json:"headline,omitempty"`
	Messages       []string     `json:"messages,omitempty"`
	Icon           *string      `json:"icon,omitempty"`
}

// NewRiskAssessment instantiates a new RiskAssessment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskAssessment() *RiskAssessment {
	this := RiskAssessment{}
	return &this
}

// NewRiskAssessmentWithDefaults instantiates a new RiskAssessment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskAssessmentWithDefaults() *RiskAssessment {
	this := RiskAssessment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RiskAssessment) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RiskAssessment) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RiskAssessment) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RiskAssessment) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RiskAssessment) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RiskAssessment) SetType(v string) {
	o.Type = &v
}

// GetVariableUsages returns the VariableUsages field value if set, zero value otherwise.
func (o *RiskAssessment) GetVariableUsages() []UsagePoint {
	if o == nil || IsNil(o.VariableUsages) {
		var ret []UsagePoint
		return ret
	}
	return o.VariableUsages
}

// GetVariableUsagesOk returns a tuple with the VariableUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetVariableUsagesOk() ([]UsagePoint, bool) {
	if o == nil || IsNil(o.VariableUsages) {
		return nil, false
	}
	return o.VariableUsages, true
}

// HasVariableUsages returns a boolean if a field has been set.
func (o *RiskAssessment) HasVariableUsages() bool {
	if o != nil && !IsNil(o.VariableUsages) {
		return true
	}

	return false
}

// SetVariableUsages gets a reference to the given []UsagePoint and assigns it to the VariableUsages field.
func (o *RiskAssessment) SetVariableUsages(v []UsagePoint) {
	o.VariableUsages = v
}

// GetRiskAssessorId returns the RiskAssessorId field value if set, zero value otherwise.
func (o *RiskAssessment) GetRiskAssessorId() string {
	if o == nil || IsNil(o.RiskAssessorId) {
		var ret string
		return ret
	}
	return *o.RiskAssessorId
}

// GetRiskAssessorIdOk returns a tuple with the RiskAssessorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetRiskAssessorIdOk() (*string, bool) {
	if o == nil || IsNil(o.RiskAssessorId) {
		return nil, false
	}
	return o.RiskAssessorId, true
}

// HasRiskAssessorId returns a boolean if a field has been set.
func (o *RiskAssessment) HasRiskAssessorId() bool {
	if o != nil && !IsNil(o.RiskAssessorId) {
		return true
	}

	return false
}

// SetRiskAssessorId gets a reference to the given string and assigns it to the RiskAssessorId field.
func (o *RiskAssessment) SetRiskAssessorId(v string) {
	o.RiskAssessorId = &v
}

// GetRisk returns the Risk field value if set, zero value otherwise.
func (o *RiskAssessment) GetRisk() Risk {
	if o == nil || IsNil(o.Risk) {
		var ret Risk
		return ret
	}
	return *o.Risk
}

// GetRiskOk returns a tuple with the Risk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetRiskOk() (*Risk, bool) {
	if o == nil || IsNil(o.Risk) {
		return nil, false
	}
	return o.Risk, true
}

// HasRisk returns a boolean if a field has been set.
func (o *RiskAssessment) HasRisk() bool {
	if o != nil && !IsNil(o.Risk) {
		return true
	}

	return false
}

// SetRisk gets a reference to the given Risk and assigns it to the Risk field.
func (o *RiskAssessment) SetRisk(v Risk) {
	o.Risk = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *RiskAssessment) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *RiskAssessment) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *RiskAssessment) SetScore(v int32) {
	o.Score = &v
}

// GetHeadline returns the Headline field value if set, zero value otherwise.
func (o *RiskAssessment) GetHeadline() string {
	if o == nil || IsNil(o.Headline) {
		var ret string
		return ret
	}
	return *o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetHeadlineOk() (*string, bool) {
	if o == nil || IsNil(o.Headline) {
		return nil, false
	}
	return o.Headline, true
}

// HasHeadline returns a boolean if a field has been set.
func (o *RiskAssessment) HasHeadline() bool {
	if o != nil && !IsNil(o.Headline) {
		return true
	}

	return false
}

// SetHeadline gets a reference to the given string and assigns it to the Headline field.
func (o *RiskAssessment) SetHeadline(v string) {
	o.Headline = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *RiskAssessment) GetMessages() []string {
	if o == nil || IsNil(o.Messages) {
		var ret []string
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *RiskAssessment) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *RiskAssessment) SetMessages(v []string) {
	o.Messages = v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *RiskAssessment) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskAssessment) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *RiskAssessment) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *RiskAssessment) SetIcon(v string) {
	o.Icon = &v
}

func (o RiskAssessment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskAssessment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VariableUsages) {
		toSerialize["variableUsages"] = o.VariableUsages
	}
	if !IsNil(o.RiskAssessorId) {
		toSerialize["riskAssessorId"] = o.RiskAssessorId
	}
	if !IsNil(o.Risk) {
		toSerialize["risk"] = o.Risk
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Headline) {
		toSerialize["headline"] = o.Headline
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	return toSerialize, nil
}

type NullableRiskAssessment struct {
	value *RiskAssessment
	isSet bool
}

func (v NullableRiskAssessment) Get() *RiskAssessment {
	return v.value
}

func (v *NullableRiskAssessment) Set(val *RiskAssessment) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskAssessment) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskAssessment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskAssessment(val *RiskAssessment) *NullableRiskAssessment {
	return &NullableRiskAssessment{value: val, isSet: true}
}

func (v NullableRiskAssessment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskAssessment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
