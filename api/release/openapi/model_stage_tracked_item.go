/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StageTrackedItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StageTrackedItem{}

// StageTrackedItem struct for StageTrackedItem
type StageTrackedItem struct {
	TrackedItemId *string `json:"trackedItemId,omitempty"`
	Status *TrackedItemStatus `json:"status,omitempty"`
	ReleaseIds []string `json:"releaseIds,omitempty"`
}

// NewStageTrackedItem instantiates a new StageTrackedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStageTrackedItem() *StageTrackedItem {
	this := StageTrackedItem{}
	return &this
}

// NewStageTrackedItemWithDefaults instantiates a new StageTrackedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStageTrackedItemWithDefaults() *StageTrackedItem {
	this := StageTrackedItem{}
	return &this
}

// GetTrackedItemId returns the TrackedItemId field value if set, zero value otherwise.
func (o *StageTrackedItem) GetTrackedItemId() string {
	if o == nil || isNil(o.TrackedItemId) {
		var ret string
		return ret
	}
	return *o.TrackedItemId
}

// GetTrackedItemIdOk returns a tuple with the TrackedItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageTrackedItem) GetTrackedItemIdOk() (*string, bool) {
	if o == nil || isNil(o.TrackedItemId) {
		return nil, false
	}
	return o.TrackedItemId, true
}

// HasTrackedItemId returns a boolean if a field has been set.
func (o *StageTrackedItem) HasTrackedItemId() bool {
	if o != nil && !isNil(o.TrackedItemId) {
		return true
	}

	return false
}

// SetTrackedItemId gets a reference to the given string and assigns it to the TrackedItemId field.
func (o *StageTrackedItem) SetTrackedItemId(v string) {
	o.TrackedItemId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StageTrackedItem) GetStatus() TrackedItemStatus {
	if o == nil || isNil(o.Status) {
		var ret TrackedItemStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageTrackedItem) GetStatusOk() (*TrackedItemStatus, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StageTrackedItem) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given TrackedItemStatus and assigns it to the Status field.
func (o *StageTrackedItem) SetStatus(v TrackedItemStatus) {
	o.Status = &v
}

// GetReleaseIds returns the ReleaseIds field value if set, zero value otherwise.
func (o *StageTrackedItem) GetReleaseIds() []string {
	if o == nil || isNil(o.ReleaseIds) {
		var ret []string
		return ret
	}
	return o.ReleaseIds
}

// GetReleaseIdsOk returns a tuple with the ReleaseIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageTrackedItem) GetReleaseIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ReleaseIds) {
		return nil, false
	}
	return o.ReleaseIds, true
}

// HasReleaseIds returns a boolean if a field has been set.
func (o *StageTrackedItem) HasReleaseIds() bool {
	if o != nil && !isNil(o.ReleaseIds) {
		return true
	}

	return false
}

// SetReleaseIds gets a reference to the given []string and assigns it to the ReleaseIds field.
func (o *StageTrackedItem) SetReleaseIds(v []string) {
	o.ReleaseIds = v
}

func (o StageTrackedItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StageTrackedItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TrackedItemId) {
		toSerialize["trackedItemId"] = o.TrackedItemId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.ReleaseIds) {
		toSerialize["releaseIds"] = o.ReleaseIds
	}
	return toSerialize, nil
}

type NullableStageTrackedItem struct {
	value *StageTrackedItem
	isSet bool
}

func (v NullableStageTrackedItem) Get() *StageTrackedItem {
	return v.value
}

func (v *NullableStageTrackedItem) Set(val *StageTrackedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableStageTrackedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableStageTrackedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStageTrackedItem(val *StageTrackedItem) *NullableStageTrackedItem {
	return &NullableStageTrackedItem{value: val, isSet: true}
}

func (v NullableStageTrackedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStageTrackedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


