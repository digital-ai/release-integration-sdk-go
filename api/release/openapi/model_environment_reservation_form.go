/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvironmentReservationForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentReservationForm{}

// EnvironmentReservationForm struct for EnvironmentReservationForm
type EnvironmentReservationForm struct {
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	Note *string `json:"note,omitempty"`
	EnvironmentId *string `json:"environmentId,omitempty"`
	ApplicationIds []string `json:"applicationIds,omitempty"`
}

// NewEnvironmentReservationForm instantiates a new EnvironmentReservationForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentReservationForm() *EnvironmentReservationForm {
	this := EnvironmentReservationForm{}
	return &this
}

// NewEnvironmentReservationFormWithDefaults instantiates a new EnvironmentReservationForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentReservationFormWithDefaults() *EnvironmentReservationForm {
	this := EnvironmentReservationForm{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *EnvironmentReservationForm) GetStartDate() string {
	if o == nil || isNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentReservationForm) GetStartDateOk() (*string, bool) {
	if o == nil || isNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *EnvironmentReservationForm) HasStartDate() bool {
	if o != nil && !isNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *EnvironmentReservationForm) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *EnvironmentReservationForm) GetEndDate() string {
	if o == nil || isNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentReservationForm) GetEndDateOk() (*string, bool) {
	if o == nil || isNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *EnvironmentReservationForm) HasEndDate() bool {
	if o != nil && !isNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *EnvironmentReservationForm) SetEndDate(v string) {
	o.EndDate = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *EnvironmentReservationForm) GetNote() string {
	if o == nil || isNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentReservationForm) GetNoteOk() (*string, bool) {
	if o == nil || isNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *EnvironmentReservationForm) HasNote() bool {
	if o != nil && !isNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *EnvironmentReservationForm) SetNote(v string) {
	o.Note = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *EnvironmentReservationForm) GetEnvironmentId() string {
	if o == nil || isNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentReservationForm) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || isNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *EnvironmentReservationForm) HasEnvironmentId() bool {
	if o != nil && !isNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *EnvironmentReservationForm) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetApplicationIds returns the ApplicationIds field value if set, zero value otherwise.
func (o *EnvironmentReservationForm) GetApplicationIds() []string {
	if o == nil || isNil(o.ApplicationIds) {
		var ret []string
		return ret
	}
	return o.ApplicationIds
}

// GetApplicationIdsOk returns a tuple with the ApplicationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentReservationForm) GetApplicationIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ApplicationIds) {
		return nil, false
	}
	return o.ApplicationIds, true
}

// HasApplicationIds returns a boolean if a field has been set.
func (o *EnvironmentReservationForm) HasApplicationIds() bool {
	if o != nil && !isNil(o.ApplicationIds) {
		return true
	}

	return false
}

// SetApplicationIds gets a reference to the given []string and assigns it to the ApplicationIds field.
func (o *EnvironmentReservationForm) SetApplicationIds(v []string) {
	o.ApplicationIds = v
}

func (o EnvironmentReservationForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentReservationForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !isNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !isNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !isNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !isNil(o.ApplicationIds) {
		toSerialize["applicationIds"] = o.ApplicationIds
	}
	return toSerialize, nil
}

type NullableEnvironmentReservationForm struct {
	value *EnvironmentReservationForm
	isSet bool
}

func (v NullableEnvironmentReservationForm) Get() *EnvironmentReservationForm {
	return v.value
}

func (v *NullableEnvironmentReservationForm) Set(val *EnvironmentReservationForm) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentReservationForm) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentReservationForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentReservationForm(val *EnvironmentReservationForm) *NullableEnvironmentReservationForm {
	return &NullableEnvironmentReservationForm{value: val, isSet: true}
}

func (v NullableEnvironmentReservationForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentReservationForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


