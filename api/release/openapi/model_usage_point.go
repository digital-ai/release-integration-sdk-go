/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UsagePoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsagePoint{}

// UsagePoint struct for UsagePoint
type UsagePoint struct {
	TargetProperty *CiProperty `json:"targetProperty,omitempty"`
}

// NewUsagePoint instantiates a new UsagePoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsagePoint() *UsagePoint {
	this := UsagePoint{}
	return &this
}

// NewUsagePointWithDefaults instantiates a new UsagePoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsagePointWithDefaults() *UsagePoint {
	this := UsagePoint{}
	return &this
}

// GetTargetProperty returns the TargetProperty field value if set, zero value otherwise.
func (o *UsagePoint) GetTargetProperty() CiProperty {
	if o == nil || IsNil(o.TargetProperty) {
		var ret CiProperty
		return ret
	}
	return *o.TargetProperty
}

// GetTargetPropertyOk returns a tuple with the TargetProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsagePoint) GetTargetPropertyOk() (*CiProperty, bool) {
	if o == nil || IsNil(o.TargetProperty) {
		return nil, false
	}
	return o.TargetProperty, true
}

// HasTargetProperty returns a boolean if a field has been set.
func (o *UsagePoint) HasTargetProperty() bool {
	if o != nil && !IsNil(o.TargetProperty) {
		return true
	}

	return false
}

// SetTargetProperty gets a reference to the given CiProperty and assigns it to the TargetProperty field.
func (o *UsagePoint) SetTargetProperty(v CiProperty) {
	o.TargetProperty = &v
}

func (o UsagePoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsagePoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetProperty) {
		toSerialize["targetProperty"] = o.TargetProperty
	}
	return toSerialize, nil
}

type NullableUsagePoint struct {
	value *UsagePoint
	isSet bool
}

func (v NullableUsagePoint) Get() *UsagePoint {
	return v.value
}

func (v *NullableUsagePoint) Set(val *UsagePoint) {
	v.value = val
	v.isSet = true
}

func (v NullableUsagePoint) IsSet() bool {
	return v.isSet
}

func (v *NullableUsagePoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsagePoint(val *UsagePoint) *NullableUsagePoint {
	return &NullableUsagePoint{value: val, isSet: true}
}

func (v NullableUsagePoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsagePoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
