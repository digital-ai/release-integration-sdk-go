/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ReleaseOrderDirection the model 'ReleaseOrderDirection'
type ReleaseOrderDirection string

// List of ReleaseOrderDirection
const (
	RELEASEORDERDIRECTION_ASC  ReleaseOrderDirection = "ASC"
	RELEASEORDERDIRECTION_DESC ReleaseOrderDirection = "DESC"
)

// All allowed values of ReleaseOrderDirection enum
var AllowedReleaseOrderDirectionEnumValues = []ReleaseOrderDirection{
	"ASC",
	"DESC",
}

func (v *ReleaseOrderDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReleaseOrderDirection(value)
	for _, existing := range AllowedReleaseOrderDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReleaseOrderDirection", value)
}

// NewReleaseOrderDirectionFromValue returns a pointer to a valid ReleaseOrderDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReleaseOrderDirectionFromValue(v string) (*ReleaseOrderDirection, error) {
	ev := ReleaseOrderDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ReleaseOrderDirection: valid values are %v", v, AllowedReleaseOrderDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReleaseOrderDirection) IsValid() bool {
	for _, existing := range AllowedReleaseOrderDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ReleaseOrderDirection value
func (v ReleaseOrderDirection) Ptr() *ReleaseOrderDirection {
	return &v
}

type NullableReleaseOrderDirection struct {
	value *ReleaseOrderDirection
	isSet bool
}

func (v NullableReleaseOrderDirection) Get() *ReleaseOrderDirection {
	return v.value
}

func (v *NullableReleaseOrderDirection) Set(val *ReleaseOrderDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseOrderDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseOrderDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseOrderDirection(val *ReleaseOrderDirection) *NullableReleaseOrderDirection {
	return &NullableReleaseOrderDirection{value: val, isSet: true}
}

func (v NullableReleaseOrderDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseOrderDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
