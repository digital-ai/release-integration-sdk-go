/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TeamMemberView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamMemberView{}

// TeamMemberView struct for TeamMemberView
type TeamMemberView struct {
	Name     *string     `json:"name,omitempty"`
	FullName *string     `json:"fullName,omitempty"`
	Type     *MemberType `json:"type,omitempty"`
	RoleId   *string     `json:"roleId,omitempty"`
}

// NewTeamMemberView instantiates a new TeamMemberView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamMemberView() *TeamMemberView {
	this := TeamMemberView{}
	return &this
}

// NewTeamMemberViewWithDefaults instantiates a new TeamMemberView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamMemberViewWithDefaults() *TeamMemberView {
	this := TeamMemberView{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TeamMemberView) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMemberView) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TeamMemberView) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TeamMemberView) SetName(v string) {
	o.Name = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *TeamMemberView) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMemberView) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *TeamMemberView) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *TeamMemberView) SetFullName(v string) {
	o.FullName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TeamMemberView) GetType() MemberType {
	if o == nil || IsNil(o.Type) {
		var ret MemberType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMemberView) GetTypeOk() (*MemberType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TeamMemberView) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MemberType and assigns it to the Type field.
func (o *TeamMemberView) SetType(v MemberType) {
	o.Type = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *TeamMemberView) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMemberView) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *TeamMemberView) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *TeamMemberView) SetRoleId(v string) {
	o.RoleId = &v
}

func (o TeamMemberView) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamMemberView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	return toSerialize, nil
}

type NullableTeamMemberView struct {
	value *TeamMemberView
	isSet bool
}

func (v NullableTeamMemberView) Get() *TeamMemberView {
	return v.value
}

func (v *NullableTeamMemberView) Set(val *TeamMemberView) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamMemberView) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamMemberView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamMemberView(val *TeamMemberView) *NullableTeamMemberView {
	return &NullableTeamMemberView{value: val, isSet: true}
}

func (v NullableTeamMemberView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamMemberView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
