/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlackoutMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlackoutMetadata{}

// BlackoutMetadata struct for BlackoutMetadata
type BlackoutMetadata struct {
	Periods []BlackoutPeriod `json:"periods,omitempty"`
}

// NewBlackoutMetadata instantiates a new BlackoutMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlackoutMetadata() *BlackoutMetadata {
	this := BlackoutMetadata{}
	return &this
}

// NewBlackoutMetadataWithDefaults instantiates a new BlackoutMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlackoutMetadataWithDefaults() *BlackoutMetadata {
	this := BlackoutMetadata{}
	return &this
}

// GetPeriods returns the Periods field value if set, zero value otherwise.
func (o *BlackoutMetadata) GetPeriods() []BlackoutPeriod {
	if o == nil || IsNil(o.Periods) {
		var ret []BlackoutPeriod
		return ret
	}
	return o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlackoutMetadata) GetPeriodsOk() ([]BlackoutPeriod, bool) {
	if o == nil || IsNil(o.Periods) {
		return nil, false
	}
	return o.Periods, true
}

// HasPeriods returns a boolean if a field has been set.
func (o *BlackoutMetadata) HasPeriods() bool {
	if o != nil && !IsNil(o.Periods) {
		return true
	}

	return false
}

// SetPeriods gets a reference to the given []BlackoutPeriod and assigns it to the Periods field.
func (o *BlackoutMetadata) SetPeriods(v []BlackoutPeriod) {
	o.Periods = v
}

func (o BlackoutMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlackoutMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Periods) {
		toSerialize["periods"] = o.Periods
	}
	return toSerialize, nil
}

type NullableBlackoutMetadata struct {
	value *BlackoutMetadata
	isSet bool
}

func (v NullableBlackoutMetadata) Get() *BlackoutMetadata {
	return v.value
}

func (v *NullableBlackoutMetadata) Set(val *BlackoutMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableBlackoutMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableBlackoutMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlackoutMetadata(val *BlackoutMetadata) *NullableBlackoutMetadata {
	return &NullableBlackoutMetadata{value: val, isSet: true}
}

func (v NullableBlackoutMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlackoutMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
