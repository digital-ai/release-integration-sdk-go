/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DeliveryFlowReleaseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryFlowReleaseInfo{}

// DeliveryFlowReleaseInfo struct for DeliveryFlowReleaseInfo
type DeliveryFlowReleaseInfo struct {
	Id        *string    `json:"id,omitempty"`
	Title     *string    `json:"title,omitempty"`
	Status    *string    `json:"status,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate   *time.Time `json:"endDate,omitempty"`
	Archived  *bool      `json:"archived,omitempty"`
}

// NewDeliveryFlowReleaseInfo instantiates a new DeliveryFlowReleaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryFlowReleaseInfo() *DeliveryFlowReleaseInfo {
	this := DeliveryFlowReleaseInfo{}
	return &this
}

// NewDeliveryFlowReleaseInfoWithDefaults instantiates a new DeliveryFlowReleaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryFlowReleaseInfoWithDefaults() *DeliveryFlowReleaseInfo {
	this := DeliveryFlowReleaseInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeliveryFlowReleaseInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFlowReleaseInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeliveryFlowReleaseInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeliveryFlowReleaseInfo) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DeliveryFlowReleaseInfo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFlowReleaseInfo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DeliveryFlowReleaseInfo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DeliveryFlowReleaseInfo) SetTitle(v string) {
	o.Title = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeliveryFlowReleaseInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFlowReleaseInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeliveryFlowReleaseInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeliveryFlowReleaseInfo) SetStatus(v string) {
	o.Status = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *DeliveryFlowReleaseInfo) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFlowReleaseInfo) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *DeliveryFlowReleaseInfo) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *DeliveryFlowReleaseInfo) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DeliveryFlowReleaseInfo) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFlowReleaseInfo) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DeliveryFlowReleaseInfo) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *DeliveryFlowReleaseInfo) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *DeliveryFlowReleaseInfo) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFlowReleaseInfo) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *DeliveryFlowReleaseInfo) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *DeliveryFlowReleaseInfo) SetArchived(v bool) {
	o.Archived = &v
}

func (o DeliveryFlowReleaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryFlowReleaseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	return toSerialize, nil
}

type NullableDeliveryFlowReleaseInfo struct {
	value *DeliveryFlowReleaseInfo
	isSet bool
}

func (v NullableDeliveryFlowReleaseInfo) Get() *DeliveryFlowReleaseInfo {
	return v.value
}

func (v *NullableDeliveryFlowReleaseInfo) Set(val *DeliveryFlowReleaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryFlowReleaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryFlowReleaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryFlowReleaseInfo(val *DeliveryFlowReleaseInfo) *NullableDeliveryFlowReleaseInfo {
	return &NullableDeliveryFlowReleaseInfo{value: val, isSet: true}
}

func (v NullableDeliveryFlowReleaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryFlowReleaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
