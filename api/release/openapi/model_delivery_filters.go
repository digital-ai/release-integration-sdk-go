/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeliveryFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryFilters{}

// DeliveryFilters struct for DeliveryFilters
type DeliveryFilters struct {
	Title                       *string          `json:"title,omitempty"`
	StrictTitleMatch            *bool            `json:"strictTitleMatch,omitempty"`
	TrackedItemTitle            *string          `json:"trackedItemTitle,omitempty"`
	StrictTrackedItemTitleMatch *bool            `json:"strictTrackedItemTitleMatch,omitempty"`
	FolderId                    *string          `json:"folderId,omitempty"`
	OriginPatternId             *string          `json:"originPatternId,omitempty"`
	Statuses                    []DeliveryStatus `json:"statuses,omitempty"`
}

// NewDeliveryFilters instantiates a new DeliveryFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryFilters() *DeliveryFilters {
	this := DeliveryFilters{}
	return &this
}

// NewDeliveryFiltersWithDefaults instantiates a new DeliveryFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryFiltersWithDefaults() *DeliveryFilters {
	this := DeliveryFilters{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DeliveryFilters) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DeliveryFilters) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DeliveryFilters) SetTitle(v string) {
	o.Title = &v
}

// GetStrictTitleMatch returns the StrictTitleMatch field value if set, zero value otherwise.
func (o *DeliveryFilters) GetStrictTitleMatch() bool {
	if o == nil || IsNil(o.StrictTitleMatch) {
		var ret bool
		return ret
	}
	return *o.StrictTitleMatch
}

// GetStrictTitleMatchOk returns a tuple with the StrictTitleMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetStrictTitleMatchOk() (*bool, bool) {
	if o == nil || IsNil(o.StrictTitleMatch) {
		return nil, false
	}
	return o.StrictTitleMatch, true
}

// HasStrictTitleMatch returns a boolean if a field has been set.
func (o *DeliveryFilters) HasStrictTitleMatch() bool {
	if o != nil && !IsNil(o.StrictTitleMatch) {
		return true
	}

	return false
}

// SetStrictTitleMatch gets a reference to the given bool and assigns it to the StrictTitleMatch field.
func (o *DeliveryFilters) SetStrictTitleMatch(v bool) {
	o.StrictTitleMatch = &v
}

// GetTrackedItemTitle returns the TrackedItemTitle field value if set, zero value otherwise.
func (o *DeliveryFilters) GetTrackedItemTitle() string {
	if o == nil || IsNil(o.TrackedItemTitle) {
		var ret string
		return ret
	}
	return *o.TrackedItemTitle
}

// GetTrackedItemTitleOk returns a tuple with the TrackedItemTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetTrackedItemTitleOk() (*string, bool) {
	if o == nil || IsNil(o.TrackedItemTitle) {
		return nil, false
	}
	return o.TrackedItemTitle, true
}

// HasTrackedItemTitle returns a boolean if a field has been set.
func (o *DeliveryFilters) HasTrackedItemTitle() bool {
	if o != nil && !IsNil(o.TrackedItemTitle) {
		return true
	}

	return false
}

// SetTrackedItemTitle gets a reference to the given string and assigns it to the TrackedItemTitle field.
func (o *DeliveryFilters) SetTrackedItemTitle(v string) {
	o.TrackedItemTitle = &v
}

// GetStrictTrackedItemTitleMatch returns the StrictTrackedItemTitleMatch field value if set, zero value otherwise.
func (o *DeliveryFilters) GetStrictTrackedItemTitleMatch() bool {
	if o == nil || IsNil(o.StrictTrackedItemTitleMatch) {
		var ret bool
		return ret
	}
	return *o.StrictTrackedItemTitleMatch
}

// GetStrictTrackedItemTitleMatchOk returns a tuple with the StrictTrackedItemTitleMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetStrictTrackedItemTitleMatchOk() (*bool, bool) {
	if o == nil || IsNil(o.StrictTrackedItemTitleMatch) {
		return nil, false
	}
	return o.StrictTrackedItemTitleMatch, true
}

// HasStrictTrackedItemTitleMatch returns a boolean if a field has been set.
func (o *DeliveryFilters) HasStrictTrackedItemTitleMatch() bool {
	if o != nil && !IsNil(o.StrictTrackedItemTitleMatch) {
		return true
	}

	return false
}

// SetStrictTrackedItemTitleMatch gets a reference to the given bool and assigns it to the StrictTrackedItemTitleMatch field.
func (o *DeliveryFilters) SetStrictTrackedItemTitleMatch(v bool) {
	o.StrictTrackedItemTitleMatch = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *DeliveryFilters) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *DeliveryFilters) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *DeliveryFilters) SetFolderId(v string) {
	o.FolderId = &v
}

// GetOriginPatternId returns the OriginPatternId field value if set, zero value otherwise.
func (o *DeliveryFilters) GetOriginPatternId() string {
	if o == nil || IsNil(o.OriginPatternId) {
		var ret string
		return ret
	}
	return *o.OriginPatternId
}

// GetOriginPatternIdOk returns a tuple with the OriginPatternId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetOriginPatternIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginPatternId) {
		return nil, false
	}
	return o.OriginPatternId, true
}

// HasOriginPatternId returns a boolean if a field has been set.
func (o *DeliveryFilters) HasOriginPatternId() bool {
	if o != nil && !IsNil(o.OriginPatternId) {
		return true
	}

	return false
}

// SetOriginPatternId gets a reference to the given string and assigns it to the OriginPatternId field.
func (o *DeliveryFilters) SetOriginPatternId(v string) {
	o.OriginPatternId = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *DeliveryFilters) GetStatuses() []DeliveryStatus {
	if o == nil || IsNil(o.Statuses) {
		var ret []DeliveryStatus
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryFilters) GetStatusesOk() ([]DeliveryStatus, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *DeliveryFilters) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []DeliveryStatus and assigns it to the Statuses field.
func (o *DeliveryFilters) SetStatuses(v []DeliveryStatus) {
	o.Statuses = v
}

func (o DeliveryFilters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.StrictTitleMatch) {
		toSerialize["strictTitleMatch"] = o.StrictTitleMatch
	}
	if !IsNil(o.TrackedItemTitle) {
		toSerialize["trackedItemTitle"] = o.TrackedItemTitle
	}
	if !IsNil(o.StrictTrackedItemTitleMatch) {
		toSerialize["strictTrackedItemTitleMatch"] = o.StrictTrackedItemTitleMatch
	}
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	if !IsNil(o.OriginPatternId) {
		toSerialize["originPatternId"] = o.OriginPatternId
	}
	if !IsNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	return toSerialize, nil
}

type NullableDeliveryFilters struct {
	value *DeliveryFilters
	isSet bool
}

func (v NullableDeliveryFilters) Get() *DeliveryFilters {
	return v.value
}

func (v *NullableDeliveryFilters) Set(val *DeliveryFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryFilters(val *DeliveryFilters) *NullableDeliveryFilters {
	return &NullableDeliveryFilters{value: val, isSet: true}
}

func (v NullableDeliveryFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
