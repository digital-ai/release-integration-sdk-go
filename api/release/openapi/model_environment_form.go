/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvironmentForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentForm{}

// EnvironmentForm struct for EnvironmentForm
type EnvironmentForm struct {
	Title       *string  `json:"title,omitempty"`
	Description *string  `json:"description,omitempty"`
	StageId     *string  `json:"stageId,omitempty"`
	LabelIds    []string `json:"labelIds,omitempty"`
}

// NewEnvironmentForm instantiates a new EnvironmentForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentForm() *EnvironmentForm {
	this := EnvironmentForm{}
	return &this
}

// NewEnvironmentFormWithDefaults instantiates a new EnvironmentForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentFormWithDefaults() *EnvironmentForm {
	this := EnvironmentForm{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *EnvironmentForm) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentForm) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *EnvironmentForm) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *EnvironmentForm) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EnvironmentForm) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentForm) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EnvironmentForm) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EnvironmentForm) SetDescription(v string) {
	o.Description = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *EnvironmentForm) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentForm) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *EnvironmentForm) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *EnvironmentForm) SetStageId(v string) {
	o.StageId = &v
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise.
func (o *EnvironmentForm) GetLabelIds() []string {
	if o == nil || IsNil(o.LabelIds) {
		var ret []string
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentForm) GetLabelIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LabelIds) {
		return nil, false
	}
	return o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *EnvironmentForm) HasLabelIds() bool {
	if o != nil && !IsNil(o.LabelIds) {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given []string and assigns it to the LabelIds field.
func (o *EnvironmentForm) SetLabelIds(v []string) {
	o.LabelIds = v
}

func (o EnvironmentForm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.LabelIds) {
		toSerialize["labelIds"] = o.LabelIds
	}
	return toSerialize, nil
}

type NullableEnvironmentForm struct {
	value *EnvironmentForm
	isSet bool
}

func (v NullableEnvironmentForm) Get() *EnvironmentForm {
	return v.value
}

func (v *NullableEnvironmentForm) Set(val *EnvironmentForm) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentForm) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentForm(val *EnvironmentForm) *NullableEnvironmentForm {
	return &NullableEnvironmentForm{value: val, isSet: true}
}

func (v NullableEnvironmentForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
