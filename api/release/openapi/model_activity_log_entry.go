/*
Digital.ai Release API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActivityLogEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityLogEntry{}

// ActivityLogEntry struct for ActivityLogEntry
type ActivityLogEntry struct {
	Username *string `json:"username,omitempty"`
	ActivityType *string `json:"activityType,omitempty"`
	Message *string `json:"message,omitempty"`
	EventTime *string `json:"eventTime,omitempty"`
	TargetType *string `json:"targetType,omitempty"`
	TargetId *string `json:"targetId,omitempty"`
	DataId *string `json:"dataId,omitempty"`
}

// NewActivityLogEntry instantiates a new ActivityLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityLogEntry() *ActivityLogEntry {
	this := ActivityLogEntry{}
	return &this
}

// NewActivityLogEntryWithDefaults instantiates a new ActivityLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityLogEntryWithDefaults() *ActivityLogEntry {
	this := ActivityLogEntry{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ActivityLogEntry) SetUsername(v string) {
	o.Username = &v
}

// GetActivityType returns the ActivityType field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetActivityType() string {
	if o == nil || isNil(o.ActivityType) {
		var ret string
		return ret
	}
	return *o.ActivityType
}

// GetActivityTypeOk returns a tuple with the ActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetActivityTypeOk() (*string, bool) {
	if o == nil || isNil(o.ActivityType) {
		return nil, false
	}
	return o.ActivityType, true
}

// HasActivityType returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasActivityType() bool {
	if o != nil && !isNil(o.ActivityType) {
		return true
	}

	return false
}

// SetActivityType gets a reference to the given string and assigns it to the ActivityType field.
func (o *ActivityLogEntry) SetActivityType(v string) {
	o.ActivityType = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ActivityLogEntry) SetMessage(v string) {
	o.Message = &v
}

// GetEventTime returns the EventTime field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetEventTime() string {
	if o == nil || isNil(o.EventTime) {
		var ret string
		return ret
	}
	return *o.EventTime
}

// GetEventTimeOk returns a tuple with the EventTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetEventTimeOk() (*string, bool) {
	if o == nil || isNil(o.EventTime) {
		return nil, false
	}
	return o.EventTime, true
}

// HasEventTime returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasEventTime() bool {
	if o != nil && !isNil(o.EventTime) {
		return true
	}

	return false
}

// SetEventTime gets a reference to the given string and assigns it to the EventTime field.
func (o *ActivityLogEntry) SetEventTime(v string) {
	o.EventTime = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetTargetType() string {
	if o == nil || isNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetTargetTypeOk() (*string, bool) {
	if o == nil || isNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasTargetType() bool {
	if o != nil && !isNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *ActivityLogEntry) SetTargetType(v string) {
	o.TargetType = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetTargetId() string {
	if o == nil || isNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetTargetIdOk() (*string, bool) {
	if o == nil || isNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasTargetId() bool {
	if o != nil && !isNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *ActivityLogEntry) SetTargetId(v string) {
	o.TargetId = &v
}

// GetDataId returns the DataId field value if set, zero value otherwise.
func (o *ActivityLogEntry) GetDataId() string {
	if o == nil || isNil(o.DataId) {
		var ret string
		return ret
	}
	return *o.DataId
}

// GetDataIdOk returns a tuple with the DataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLogEntry) GetDataIdOk() (*string, bool) {
	if o == nil || isNil(o.DataId) {
		return nil, false
	}
	return o.DataId, true
}

// HasDataId returns a boolean if a field has been set.
func (o *ActivityLogEntry) HasDataId() bool {
	if o != nil && !isNil(o.DataId) {
		return true
	}

	return false
}

// SetDataId gets a reference to the given string and assigns it to the DataId field.
func (o *ActivityLogEntry) SetDataId(v string) {
	o.DataId = &v
}

func (o ActivityLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityLogEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !isNil(o.ActivityType) {
		toSerialize["activityType"] = o.ActivityType
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.EventTime) {
		toSerialize["eventTime"] = o.EventTime
	}
	if !isNil(o.TargetType) {
		toSerialize["targetType"] = o.TargetType
	}
	if !isNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	if !isNil(o.DataId) {
		toSerialize["dataId"] = o.DataId
	}
	return toSerialize, nil
}

type NullableActivityLogEntry struct {
	value *ActivityLogEntry
	isSet bool
}

func (v NullableActivityLogEntry) Get() *ActivityLogEntry {
	return v.value
}

func (v *NullableActivityLogEntry) Set(val *ActivityLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityLogEntry(val *ActivityLogEntry) *NullableActivityLogEntry {
	return &NullableActivityLogEntry{value: val, isSet: true}
}

func (v NullableActivityLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


