---
openapi: 3.0.3
info:
  title: Digital.ai Release API
  version: "1.0"
servers:
  - url: /api/v1
    description: Local API endpoint
paths:
  /releases/{releaseId}/variableValues:
    get:
      tags:
        - releases
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            pattern: ".*Release[^/]*"
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
 # --------
  /releases/{releaseId}/variables:
    get:
      tags:
        - releases
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            pattern: ".*Release[^/]*"
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Variable"
    put:
      tags:
        - releases
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            pattern: .*?
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Variable"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Variable"
    post:
      tags:
        - releases
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            pattern: .*?
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Variable1"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Variable"
# ----------
  /releases/{variableId}:
    get:
      tags:
        - releases
      parameters:
        - name: variableId
          in: path
          required: true
          schema:
            pattern: ".*/Variable[^/]*"
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
    put:
      tags:
        - releases
      parameters:
        - name: variableId
          in: path
          required: true
          schema:
            pattern: ".*/Variable[^/]*"
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
    delete:
      tags:
        - releases
      parameters:
        - name: variableId
          in: path
          required: true
          schema:
            pattern: ".*/Variable[^/]*"
            type: string
      responses:
        "204":
          description: No Content
# ------
  /releases/{variableId}/possibleValues:
    get:
      operationId: getVariablePossibleValues
      tags:
        - ReleaseApi
      parameters:
        - name: variableId
          in: path
          required: true
          schema:
            pattern: ".*/Variable[^/]*"
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
# ------
  /releases/{variableId}/used:
    get:
      operationId: isVariableUsed
      tags:
        - ReleaseApi
      parameters:
        - name: variableId
          in: path
          required: true
          schema:
            pattern: ".*/Variable[^/]*"
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean

# -----
  /releases/{variableId}/replace:
    post:
      operationId: replaceVariable
      tags:
        - ReleaseApi
      parameters:
        - name: variableId
          in: path
          required: true
          schema:
            pattern: ".*/Variable[^/]*"
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableOrValue'
      responses:
        "201":
          description: Created
# -----
components:
  schemas:
    Variable:
      type: object
      properties:
        folderId:
          type: string
        title:
          type: string
        key:
          type: string
        requiresValue:
          type: boolean
        showOnReleaseStart:
          type: boolean
        label:
          type: string
        description:
          type: string
        valueProvider:
          $ref: '#/components/schemas/ValueProviderConfiguration'
        inherited:
          type: boolean
        value:
          type: object
        emptyValue:
          type: object
        valueEmpty:
          type: boolean
        untypedValue:
          type: object
        password:
          type: boolean
        valueAsString:
          type: string
        emptyValueAsString:
          type: string
    Variable1:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        type:
          type: string
        requiresValue:
          type: boolean
        showOnReleaseStart:
          type: boolean
        value:
          type: object
        label:
          type: string
        description:
          type: string
        multiline:
          type: boolean
        inherited:
          type: boolean
        preventInterpolation:
          type: boolean
        externalVariableValue:
          $ref: '#/components/schemas/ExternalVariableValue'
        valueProvider:
          $ref: '#/components/schemas/ValueProviderConfiguration'
    ValueProviderConfiguration:
      type: object
      properties:
        variable:
          $ref: '#/components/schemas/Variable'
    ExternalVariableValue:
      type: object
      properties:
        server:
          type: string
        serverType:
          type: string
        path:
          type: string
        externalKey:
          type: string
    VariableOrValue:
      type: object
      properties:
        variable:
          type: string
        value:
          type: object
